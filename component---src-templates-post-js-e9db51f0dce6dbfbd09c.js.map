{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/utils/capitalize.js","webpack:///./node_modules/@material-ui/core/esm/IconButton/IconButton.js","webpack:///./src/components/header/header.js","webpack:///./src/templates/post.js"],"names":["capitalize","string","charAt","toUpperCase","slice","props","ref","_props$edge","edge","children","classes","className","_props$color","color","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","_props$size","size","other","ButtonBase","root","concat","edgeStart","edgeEnd","centerRipple","focusRipple","label","withStyles","theme","textAlign","flex","fontSize","typography","pxToRem","padding","borderRadius","overflow","palette","action","active","transition","transitions","create","duration","shortest","backgroundColor","hoverOpacity","marginLeft","marginRight","colorInherit","colorPrimary","primary","main","colorSecondary","secondary","sizeSmall","width","display","alignItems","justifyContent","name","Header","title","onClick","useState","scroll","setScroll","handleScroll","window","scrollY","useEffect","addEventListener","removeEventListener","headerColor","contentColor","Fragment","style","Template","markdownRemark","data","frontmatter","html","navigate","id","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"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","file":"component---src-templates-post-js-e9db51f0dce6dbfbd09c.js","sourcesContent":["// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word a the sentence.\n// We only handle the first word.\nexport default function capitalize(string) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof string !== 'string') {\n      throw new Error('Material-UI: capitalize(string) expects a string argument.');\n    }\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","import \"core-js/modules/es6.array.some\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      textAlign: 'center',\n      flex: '0 0 auto',\n      fontSize: theme.typography.pxToRem(24),\n      padding: 12,\n      borderRadius: '50%',\n      overflow: 'visible',\n      // Explicitly set the default value to solve a bug on IE 11.\n      color: theme.palette.action.active,\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.action.active, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: 'transparent',\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -12,\n      '$sizeSmall&': {\n        marginLeft: -3\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -12,\n      '$sizeSmall&': {\n        marginRight: -3\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 3,\n      fontSize: theme.typography.pxToRem(18)\n    },\n\n    /* Styles applied to the children container element. */\n    label: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    }\n  };\n};\n/**\n * Refer to the [Icons](/components/icons/) section of the documentation\n * regarding the available icon options.\n */\n\nvar IconButton = React.forwardRef(function IconButton(props, ref) {\n  var _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"edge\", \"children\", \"classes\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"]);\n\n  return React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], disabled && classes.disabled, size === \"small\" && classes[\"size\".concat(capitalize(size))], {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge]),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref\n  }, other), React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes = {\n  /**\n   * The icon element.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var found = React.Children.toArray(props.children).some(function (child) {\n      return React.isValidElement(child) && child.props.onClick;\n    });\n\n    if (found) {\n      return new Error(['Material-UI: you are providing an onClick event listener ' + 'to a child of a button element.', 'Firefox will never trigger the event.', 'You should move the onClick listener to the parent button element.', 'https://github.com/mui-org/material-ui/issues/13957'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiIconButton'\n})(IconButton);","import React, { useEffect, useState } from 'react'\nimport './style.css';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton'\n\nconst Header = ({title, onClick}) => {\n  const [scroll, setScroll] = useState(0);\n\n  const handleScroll = () => {\n    setScroll(window.scrollY / 70 * 255);\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [])\n\n  const headerColor = `rgba(0, 77, 128, ${scroll/255}`\n  const contentColor = `rgb(${scroll+50}, ${scroll+50}, ${scroll+50})`\n\n  return (\n    <React.Fragment>\n      <div className={\"header header-effect\"}\n           style={{backgroundColor: headerColor}}>\n        <IconButton onClick={onClick}>\n          <span style={{color: contentColor}} className=\"material-icons icon\">\n          home\n          </span>\n        </IconButton>\n\n        <div style={{color: contentColor}} className={'header-title'}>{title}</div>\n      </div>\n      <div className={\"header\"}/>\n    </React.Fragment>\n  )\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default Header\n","import React from \"react\"\nimport Layout from \"../components/layout/layout\"\nimport \"../static/screen.css\"\nimport SEO from \"../components/seo\"\nimport Header from \"../components/header/header\"\nimport { graphql, navigate } from \"gatsby\"\n\nexport default function Template({data}) {\n  const { markdownRemark } = data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <>\n      <Layout>\n        <SEO title={frontmatter.title}></SEO>\n          <Header onClick={() => navigate(\"/\")} title={\"Notetaking\"}/>\n          <section className={\"content\"}>\n            <div id={'data-content'} dangerouslySetInnerHTML={{ __html: html }}/>\n          </section>\n      </Layout>\n    </>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n      }\n    }\n  }\n`\n\n"],"sourceRoot":""}